# filename: ~/.bashrc.d/K8s

# THIS FILE WAS DERIVED FROM
# https://raw.githubusercontent.com/cloudxabide/devops/main/Files/.bashrc.d_K8s
# curl -o ~/.bashrc.d/K8s https://raw.githubusercontent.com/cloudxabide/devops/main/Files/.bashrc.d_K8s

## Alias(es) do not accept parameters - use a function, if you need to pass something in
# Kubernetes specific (work-in-progress)
alias oclogin='oc login -u morpheus -p 'NotAPassword' --insecure-skip-tls-verify --server=https://rh7-ocp3-mst.matrix.lab.:8443'
KUBECONFIG=${HOME}/.kube/config
alias k=$(which kubectl)
alias kge='clear; kubectl get events --sort-by=.lastTimestamp'
alias kgea='clear; kubectl get events -A --sort-by=.lastTimestamp'
alias kwtf='clear; kubectl top pod; echo; kubectl top node; echo; kubectl get events --sort-by=.lastTimestamp'

update_kubeconfig() {
unset KUBECONFIG; export KUBECONFIG=${HOME}/.kube/config
cat /dev/null > $KUBECONFIG
for CONFIG in $(find ${HOME}/.kube/ -name "*kubeconfig"); do export KUBECONFIG=$KUBECONFIG:$CONFIG; done
kubectl config view --flatten > ${HOME}/.kube/config
unset KUBECONFIG; export KUBECONFIG=${HOME}/.kube/config
}

# replicationg the OpenShit "oc ns" command, sort of
#  I am not sure this is even needed
kns() {
  if [[ -z $1 ]]
  then
    kubectl get ns
    echo
    echo -e "Current namespace is: $(kubectl config get-contexts | grep \* | awk '{ print $5 }')"
  else
    kubectl config set-context --current --namespace=${1}
    echo "Current namespace is: $1"
  fi
}

export oclogin KUBECONFIG
